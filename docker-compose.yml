services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: pastelaria-api-app
    volumes:
      - ./pastelaria-api:/var/www/html
      - ./pastelaria-api/storage:/var/www/html/storage
    ports:
      - "9000:9000"
    depends_on:
      - mysql
    environment:
      APP_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: secret
    networks:
      - app-network

  mysql:
    image: mysql:8
    container_name: pastelaria-api-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pastelaria
      MYSQL_USER: root
      MYSQL_PASSWORD:
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  nginx:
    image: nginx
    container_name: pastelaria-api-nginx
    ports:
      - "8000:80"
    volumes:
      - ./pastelaria-api:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  vue-prod:
    build:
      context: .
      dockerfile: docker/vue/Dockerfile.prod
    container_name: pastelaria-api-frontend
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network: